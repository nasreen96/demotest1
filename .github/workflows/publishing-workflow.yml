name: publishing-workflow

on:
  workflow_dispatch:
    inputs:
      remove_deployment:
        type: boolean
        description: "Remove Deployment"
        required: true
        default: true
  pull_request:
    branches:
      - "main"

permissions:
  id-token: write
  contents: read
  statuses: write

env:
  moduleTestSubDir: "tests/e2e/defaults"
  moduleTestFileName: "main.test.bicep"
  elementsRootFolder: "elements/res"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'ci/') == false
    # environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # - name: Define inputs
      #   id: define_inputs
      #   shell: pwsh
      #   run: |
      #     # Split the branch name into module name and version
      #     $moduleParts = "${{ github.head_ref }}" -split '/'
      #     # Module name
      #     $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
      #     # Set the outputs
      #     echo "::set-output name=module_name::$moduleName"
      # - name: Deploy Bicep Test E2E Defaults
      #   id: deploy_bicep
      #   uses: ./.github/actions/templates/deploy
      #   with:
      #     module_name: "${{ steps.define_inputs.outputs.module_name }}"
      #     test_subdir: "${{ env.moduleTestSubDir }}"
      #     file_name: "${{ env.moduleTestFileName }}"
      #     region: ${{ vars.AZURE_RESOURCE_REGION }}
      #     namePrefix: ${{ vars.AZURE_RESOURCE_PREFIX }}
      #     azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      #     azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      #     azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  publish:
    needs: deploy
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'ci/') == false
    # environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # - name: Define inputs
      #   id: define_inputs
      #   shell: pwsh
      #   run: |
      #     # Split the branch name into module name and version
      #     $moduleParts = "${{ github.head_ref }}" -split '/'
      #     # Remove patch version
      #     $versionParts = $moduleParts[2] -split '\.'
      #     $majorVersion = [int]$versionParts[0]
      #     $minorVersion = [int]$versionParts[1]
      #     $patchVersion = [int]$versionParts[2]
      #     $version = "$majorVersion.$minorVersion.$patchVersion"
      #     # Module name
      #     $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
      #     # Set the outputs
      #     echo "::set-output name=module_name::$moduleName"
      #     echo "::set-output name=version::$version"
      # - name: Publish Bicep Modules to ACR
      #   uses: ./.github/actions/templates/publish
      #   with:
      #     acr_name: ${{ vars.BICEP_ACR_NAME}}
      #     base_module_path: ${{ env.elementsRootFolder}}/${{ steps.define_inputs.outputs.module_name }}
      #     version: ${{ steps.define_inputs.outputs.version }}
      #     azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      #     azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      #     azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  Removal:
    if: ${{ inputs.remove_deployment == true && startsWith(github.head_ref, 'ci/') == false }}
    # if: ${{ github.event_name == 'pull_request' && startsWith(github.head_ref, 'ci/') == false || inputs.remove_deployment == true }}
    # if: ${{ github.event_name == 'pull_request' && (inputs.remove_deployment == true || startsWith(github.head_ref, 'ci/') == false) }}
    needs:
      - deploy
      - publish
    runs-on: ubuntu-latest
    # environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # - name: Define inputs
      #   id: define_inputs
      #   shell: pwsh
      #   run: |
      #     # Split the branch name into module name and version
      #     $moduleParts = "${{ github.head_ref }}" -split '/'
      #     # Module name
      #     $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
      #     # Set the outputs
      #     echo "::set-output name=module_name::$moduleName"
      # - name: Remove Deployment
      #   uses: ./.github/actions/templates/remove
      #   with:
      #     module_name: ${{ steps.define_inputs.outputs.module_name }}
      #     namePrefix: ${{ vars.AZURE_RESOURCE_PREFIX }}
      #     azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      #     azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      #     azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
  # verify:
  #   if: ${{ github.event_name == 'pull_request' && !startsWith(github.head_ref, 'ci/') || inputs.remove_deployment == true }}
  #   needs: Removal
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Echo branch name and verification message
  #       run: |
  #         echo "Checking out the feature branch: ${{ github.head_ref }}"
  #         echo "Branch checkout successful. Verification status set to pass."

  verify:
    # if: always()
    if: ${{ github.event_name == 'pull_request' && startsWith(github.head_ref, 'ci/') == true }}
    # if: ${{ github.event_name == 'pull_request' && (startsWith(github.head_ref, 'ci/') || inputs.remove_deployment == true) }}
    # if: ${{ github.event_name == 'pull_request' && (startsWith(github.head_ref, 'ci/') == false || inputs.remove_deployment == true) }}
    # if: ${{ github.event_name == 'pull_request' && (inputs.remove_deployment == true || startsWith(github.head_ref, 'ci/') == false) }}
    needs: Removal
    runs-on: ubuntu-latest
    steps:
      - name: Echo branch name and verification message
        run: |
          echo "Verification step triggered for branch: ${{ github.head_ref }}"
            


