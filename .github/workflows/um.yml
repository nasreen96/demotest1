name: update-module-options-workflow

on:
  push:
    branches:
      - ci/module-list

  workflow_dispatch:
    inputs:
      yamlFilePath:
        type: string
        description: 'Path to the onboarding workflow YAML file (e.g., .github\actions\templates\testing\onboarding-workflow.yml)'
        required: true
      registryUrl:
        type: string
        description: 'URL of the MCR registry (default: https://mcr.microsoft.com/v2)'
        default: 'https://mcr.microsoft.com/v2'
        required: false
      moduleRepoPath:
        type: string
        description: 'Path to the module repository in the MCR registry (default: bicep/avm/res)'
        default: 'bicep/avm/res'
        required: false

  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC

permissions:
  id-token: write
  contents: write
  statuses: write
  actions: write

jobs:
  update_modules:
    runs-on: ubuntu-latest

    steps:
      - name: Generate App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.VERSION_BUMPER_APPID }}
          private-key: ${{ secrets.VERSION_BUMPER_SECRET }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          $yamlFilePath = "${{ github.event.inputs.yamlFilePath }}"
          $registryUrl = "${{ github.event.inputs.registryUrl }}"
          $moduleRepoPath = "${{ github.event.inputs.moduleRepoPath }}"
          echo "::set-output name=yamlFilePath::$yamlFilePath"
          echo "::set-output name=registryUrl::$registryUrl"
          echo "::set-output name=moduleRepoPath::$moduleRepoPath"

      - name: Create and checkout feature branch
        shell: pwsh
        run: |
          git checkout main
          git pull origin main
          git branch ci/update-onboarding-workflow-06 || Write-Output "Branch already exists locally or remotely."
          git checkout ci/update-onboarding-workflow-06
          git branch

      - name: Fetch module list from MCR and Update Onboard Module Input options
        id: fetch_modules
        shell: pwsh
        run: |
          # Fetch module list from the script
          $ListOutput = ./utilities/tools/Get-ModuleList.ps1
          Write-Host "Raw module list from script:"
          Write-Host "$($ListOutput)"

          # Format the module list to remove brackets and clean up
          $FormattedList = $ListOutput | ForEach-Object {
              $_.Trim() -replace '["''\[\]]', '' # Remove unwanted characters
          } | Where-Object { 
              $_ -ne '' # Remove empty strings
          }

          # Log the cleaned module list
          Write-Host "Cleaned Module List:"
          $FormattedList | ForEach-Object { Write-Host "- $_" }

          # Pass the cleaned list to the update script
          ./utilities/tools/Update-ModuleList01.ps1 -yamlFilePath "${{ github.event.inputs.yamlFilePath }}" -newOptions $FormattedList




      - name: Push changes to feature branch
        env:
          token: ${{ steps.app-token.outputs.token }}
        shell: pwsh
        run: |
          # Load and clean the YAML content
          $YamlPath = '.github\workflows\onboarding-workflow.yml'
          $YamlContent = Get-Content -Raw -Path $YamlPath | ConvertFrom-Yaml
      
          # Process and clean the module_path options
          $CleanedOptions = $YamlContent.on.workflow_dispatch.inputs.module_path.options | ForEach-Object {
              $_ -replace '["''\[\]]', ''  | Trim() # Remove unwanted characters and trim spaces
          } | Where-Object {
              ($_ -ne '') -and (-not $_.StartsWith('|')) # Remove empty entries and unwanted lines
          }
      
          # Replace the options with cleaned values
          $YamlContent.on.workflow_dispatch.inputs.module_path.options = $CleanedOptions
      
          # Convert back to YAML and save
          $YamlContent | ConvertTo-Yaml | Set-Content -Path $YamlPath
      
          # Log the cleaned YAML for debugging
          Write-Host "Cleaned YAML Content:"
          Get-Content -Path $YamlPath
      
          # Configure Git and push changes to the feature branch
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@gtest.com"
          git add $YamlPath
          git commit -m "Cleaned and updated module_path options in onboarding workflow"
          git push origin ci/update-onboarding-workflow-06





      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ci/update-onboarding-workflow-03
      #     base: main
      #     title: "Update Onboarding Workflow"
      #     body: "This PR updates the onboarding workflow with the latest module options."
