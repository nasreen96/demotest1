name: update-module-options-workflow

on:
  push:
    branches:
      - ci/module-list

  workflow_dispatch:
    inputs:
      yamlFilePath:
        type: string
        description: 'Path to the onboarding workflow YAML file (e.g., .github\actions\templates\testing\onboarding-workflow.yml)'
        required: true
      registryUrl:
        type: string
        description: 'URL of the MCR registry (default: https://mcr.microsoft.com/v2)'
        default: 'https://mcr.microsoft.com/v2'
        required: false
      moduleRepoPath:
        type: string
        description: 'Path to the module repository in the MCR registry (default: bicep/avm/res)'
        default: 'bicep/avm/res'
        required: false

  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC

permissions:
  id-token: write
  contents: write
  statuses: write
  actions: write

jobs:
  update_modules:
    runs-on: ubuntu-latest

    steps:
      - name: Generate App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.VERSION_BUMPER_APPID }}
          private-key: ${{ secrets.VERSION_BUMPER_SECRET }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          $yamlFilePath = "${{ github.event.inputs.yamlFilePath }}"
          $registryUrl = "${{ github.event.inputs.registryUrl }}"
          $moduleRepoPath = "${{ github.event.inputs.moduleRepoPath }}"
          echo "::set-output name=yamlFilePath::$yamlFilePath"
          echo "::set-output name=registryUrl::$registryUrl"
          echo "::set-output name=moduleRepoPath::$moduleRepoPath"

      - name: Create and checkout feature branch
        shell: pwsh
        run: |
          git checkout ci/module-list
          git pull origin ci/module-list
          git branch ci/update-onboarding-workflow-01 || Write-Output "Branch already exists locally or remotely."
          git checkout ci/update-onboarding-workflow-01
          git branch

      # - name: Fetch module list from MCR
      #   id: fetch_modules
      #   run: |
      #     $ListOutput = ./utilities/tools/Get-ModuleList.ps1
      #     $jsonListOutput = $ListOutput -replace "`r`n", '","'
      #     $jsonListOutput = '["' + $jsonListOutput.TrimEnd(',') + '"]'
      #     echo "::set-output name=moduleList::$jsonListOutput"
      #   shell: pwsh

      # - name: Convert module list to YAML format
      #   id: convert_yaml
      #   run: |
      #     echo "Generating YAML options..."
          
      #     # Save raw JSON input
      #     echo '${{ steps.fetch_modules.outputs.moduleList }}' > raw-options.json
      #     echo "Raw JSON Options:"
      #     cat raw-options.json

      #     # Validate JSON
      #     if ! jq empty raw-options.json; then
      #       echo "Invalid JSON format. Exiting."
      #       exit 1
      #     fi

      #     # Convert JSON array to YAML
      #     echo "options:" > formatted-options.yaml
      #     jq -r '.[] | "- \(.)"' raw-options.json >> formatted-options.yaml

      #     # Debugging output
      #     echo "Formatted YAML Options:"
      #     cat formatted-options.yaml
      #   shell: bash

      # - name: Update YAML file
      #   run: |
      #     cat formatted-options.yaml >> ${{ steps.define_inputs.outputs.yamlFilePath }}
      #   shell: bash

      - name: Fetch module list from MCR
        id: fetch_modules
        run: |
          pwsh ./utilities/tools/Get-ModuleList.ps1 `
            -RegistryUrl '${{ steps.define_inputs.outputs.registryUrl }}' `
            -ModuleRepoPath '${{ steps.define_inputs.outputs.moduleRepoPath }}' `
            > raw-module-list.txt
        shell: pwsh

      # Step 4: Format module list
      - name: Format module list
        id: format_modules
        run: |
          moduleList=$(cat raw-module-list.txt | jq -R -s 'split("\n") | map(select(length > 0)) | map("- \(.)") | join("\n")')
          echo "::set-output name=moduleList::${moduleList}"
        shell: bash

      # Step 5: Update onboarding workflow
      - name: Update onboarding workflow
        id: update_workflow
        run: |
          pwsh ./utilities/tools/Update-ModuleList01.ps1 `
            -yamlFilePath '${{ steps.define_inputs.outputs.yamlFilePath }}' `
            -newOptions '${{ steps.format_modules.outputs.moduleList }}'
        shell: pwsh

      - name: Push changes to feature branch
        env:
          token: ${{ steps.app-token.outputs.token }}
        shell: pwsh
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@gtest.com"
          git add .
          git commit -m "Update onboarding workflow module options"
          git push origin ci/update-onboarding-workflow-01
